
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-suse-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Using binary PPM for Linux distribution: opensuse-leap (version 15.6)
- Project '~/Workspace/Github/economics-open-science' loaded. [renv 1.1.1]
[Previously saved workspace restored]

> # R Download Statistics by Country for 2024
> # This script downloads CRAN logs for R downloads in 2024,
> # aggregates by country, creates maps, and computes regional statistics
> 
> source(file.path(rprojroot::find_root(rprojroot::has_file("config.R")),"config.R"),echo=FALSE)
Files already there, not re-downloading
> 
> # Load required libraries
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(countrycode)
> library(maps)

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map

> library(ggplot2)
> library(viridis)
Loading required package: viridisLite

Attaching package: ‘viridis’

The following object is masked from ‘package:maps’:

    unemp

> library(scales)

Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor

> library(readr)
> library(lubridate)
> library(tidylog)

Attaching package: ‘tidylog’

The following objects are masked from ‘package:dplyr’:

    add_count, add_tally, anti_join, count, distinct, distinct_all,
    distinct_at, distinct_if, filter, filter_all, filter_at, filter_if,
    full_join, group_by, group_by_all, group_by_at, group_by_if,
    inner_join, left_join, mutate, mutate_all, mutate_at, mutate_if,
    relocate, rename, rename_all, rename_at, rename_if, rename_with,
    right_join, sample_frac, sample_n, select, select_all, select_at,
    select_if, semi_join, slice, slice_head, slice_max, slice_min,
    slice_sample, slice_tail, summarise, summarise_all, summarise_at,
    summarise_if, summarize, summarize_all, summarize_at, summarize_if,
    tally, top_frac, top_n, transmute, transmute_all, transmute_at,
    transmute_if, ungroup

The following objects are masked from ‘package:tidyr’:

    drop_na, fill, gather, pivot_longer, pivot_wider, replace_na,
    separate_wider_delim, separate_wider_position,
    separate_wider_regex, spread, uncount

The following object is masked from ‘package:stats’:

    filter

> 
> # Load data from disk
> 
> 
> all_downloads <- readRDS(file.path(interwrk, "r_downloads_2024_combined.rds"))
> 
> # Aggregate by country
> country_stats <- all_downloads %>%
+   group_by(country) %>%
+   summarise(
+     downloads = sum(downloads, na.rm = TRUE),
+     .groups = "drop"
+   ) %>%
+   arrange(desc(downloads))
group_by: one grouping variable (country)
summarise: now 234 rows and 2 columns, ungrouped
> 
> # Add country names and region information
> country_stats <- country_stats %>%
+   mutate(
+     country_name = countrycode(country, "iso2c", "country.name"),
+     continent = countrycode(country, "iso2c", "continent"),
+     region = countrycode(country, "iso2c", "region")
+   ) %>%
+   filter(!is.na(country_name))  # Remove invalid country codes
mutate: new variable 'country_name' (character) with 230 unique values and 2% NA
        new variable 'continent' (character) with 7 unique values and 2% NA
        new variable 'region' (character) with 8 unique values and 4% NA
filter: removed 5 rows (2%), 229 rows remaining
Warning message:
There were 3 warnings in `.fun()`.
The first warning was:
ℹ In argument: `country_name = countrycode(country, "iso2c", "country.name")`.
Caused by warning:
! Some values were not matched unambiguously: A1, A2, AP, EU
ℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings. 
> 
> # Define regional groupings as requested
> country_stats <- country_stats %>%
+   mutate(
+     custom_region = case_when(
+       continent == "Europe" ~ "Europe",
+       continent == "Asia" ~ "Asia",
+       continent == "Africa" ~ "Africa",
+       region == "Latin America & Caribbean" ~ "Latin America & Caribbean",
+       region == "Northern America" ~ "North America",
+       continent == "Oceania" ~ "Oceania",
+       TRUE ~ "Other"
+     )
+   )
mutate: new variable 'custom_region' (character) with 6 unique values and 0% NA
> 
> # Print top 20 countries
> cat("\nTop 20 countries by R downloads in 2024:\n")

Top 20 countries by R downloads in 2024:
> print(country_stats %>% head(20) %>% select(country, country_name, downloads, continent, region))
select: dropped one variable (custom_region)
# A tibble: 20 × 5
   country country_name        downloads continent region                   
   <chr>   <chr>                   <int> <chr>     <chr>                    
 1 US      United States         4758200 Americas  North America            
 2 CN      China                  276884 Asia      East Asia & Pacific      
 3 JP      Japan                  198622 Asia      East Asia & Pacific      
 4 IN      India                  166302 Asia      South Asia               
 5 GB      United Kingdom         152970 Europe    Europe & Central Asia    
 6 DE      Germany                130763 Europe    Europe & Central Asia    
 7 CA      Canada                 120445 Americas  North America            
 8 KR      South Korea             96058 Asia      East Asia & Pacific      
 9 ID      Indonesia               92580 Asia      East Asia & Pacific      
10 AU      Australia               80455 Oceania   East Asia & Pacific      
11 FR      France                  78908 Europe    Europe & Central Asia    
12 ES      Spain                   78304 Europe    Europe & Central Asia    
13 HK      Hong Kong SAR China     72907 Asia      East Asia & Pacific      
14 CH      Switzerland             62307 Europe    Europe & Central Asia    
15 CO      Colombia                55359 Americas  Latin America & Caribbean
16 IT      Italy                   55189 Europe    Europe & Central Asia    
17 BR      Brazil                  54072 Americas  Latin America & Caribbean
18 NL      Netherlands             51903 Europe    Europe & Central Asia    
19 MX      Mexico                  49403 Americas  Latin America & Caribbean
20 RU      Russia                  40145 Europe    Europe & Central Asia    
> 
> # Regional statistics
> regional_stats <- country_stats %>%
+   group_by(custom_region) %>%
+   summarise(
+     countries = n(),
+     total_downloads = sum(downloads),
+     avg_downloads = mean(downloads),
+     .groups = "drop"
+   ) %>%
+   arrange(desc(total_downloads))
group_by: one grouping variable (custom_region)
summarise: now 6 rows and 4 columns, ungrouped
> 
> cat("\nRegional statistics for R downloads in 2024:\n")

Regional statistics for R downloads in 2024:
> print(regional_stats)
# A tibble: 6 × 4
  custom_region             countries total_downloads avg_downloads
  <chr>                         <int>           <int>         <dbl>
1 Other                             6         4878831       813138.
2 Asia                             51         1166902        22880.
3 Europe                           49          899180        18351.
4 Latin America & Caribbean        47          287837         6124.
5 Africa                           55          102168         1858.
6 Oceania                          21           97340         4635.
> 
> # Create world map visualization
> world_map <- map_data("world")
> 
> # Prepare data for mapping
> map_data <- country_stats %>%
+   mutate(region = country_name) %>%
+   select(region, downloads)
mutate: changed 229 values (100%) of 'region' (4 fewer NAs)
select: dropped 4 variables (country, country_name, continent, custom_region)
> 
> # Merge with world map data
> world_map_data <- world_map %>%
+   left_join(map_data, by = "region")
left_join: added one column (downloads)
           > rows only in x         10,877
           > rows only in map_data (    30)
           > matched rows           88,461
           >                       ========
           > rows total             99,338
> 
> # Create the world map plot
> world_plot <- ggplot(world_map_data, aes(x = long, y = lat, group = group)) +
+   geom_polygon(aes(fill = downloads), color = "white", size = 0.1) +
+   scale_fill_viridis_c(
+     name = "R Downloads",
+     trans = "log10",
+     labels = scales::comma_format(),
+     na.value = "grey90"
+   ) +
+   labs(
+     title = "R Downloads by Country in 2024",
+     subtitle = "Data from CRAN download logs",
+     caption = "Source: http://cran-logs.rstudio.com/"
+   ) +
+   theme_void() +
+   theme(
+     plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
+     plot.subtitle = element_text(hjust = 0.5, size = 12),
+     plot.caption = element_text(hjust = 0.5, size = 10),
+     legend.position = "bottom"
+   ) +
+   coord_fixed(1.3)
Warning message:
Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
ℹ Please use `linewidth` instead. 
> 
> # Save the world map
> ggsave(file.path(outputs, "r_downloads_world_map_2024.png"), world_plot, 
+        width = 12, height = 8, dpi = 300, bg = "white")
> 
> # Create regional bar chart
> regional_plot <- ggplot(regional_stats, aes(x = reorder(custom_region, total_downloads), y = total_downloads)) +
+   geom_col(fill = "steelblue", alpha = 0.8) +
+   coord_flip() +
+   scale_y_continuous(labels = scales::comma_format()) +
+   labs(
+     title = "R Downloads by Region in 2024",
+     x = "Region",
+     y = "Total Downloads",
+     caption = "Source: CRAN download logs"
+   ) +
+   theme_minimal() +
+   theme(
+     plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
+     axis.text = element_text(size = 11),
+     axis.title = element_text(size = 12)
+   )
> 
> # Save the regional plot
> ggsave(file.path(outputs, "r_downloads_regional_2024.png"), regional_plot, 
+        width = 10, height = 6, dpi = 300, bg = "white")
> 
> # Save summary statistics
> write_csv(country_stats, file.path(interwrk, "r_downloads_by_country_2024.csv"))
> write_csv(regional_stats, file.path(interwrk, "r_downloads_by_region_2024.csv"))
> 
> # Print final summary
> cat("\n=== SUMMARY ===\n")

=== SUMMARY ===
> cat("Total R downloads in 2024:", format(nrow(all_downloads), big.mark = ","), "\n")
Total R downloads in 2024: 49,876 
> cat("Number of countries:", nrow(country_stats), "\n")
Number of countries: 229 
> cat("Total unique IP addresses:", format(sum(country_stats$unique_ips), big.mark = ","), "\n")
Total unique IP addresses: 0 
Warning message:
Unknown or uninitialised column: `unique_ips`. 
> cat("\nFiles saved:\n")

Files saved:
> cat("- ", file.path(outputs, "r_downloads_world_map_2024.png"), "\n")
-  /home/vilhuber/Workspace/Github/economics-open-science/outputs/r_downloads_world_map_2024.png 
> cat("- ", file.path(outputs, "r_downloads_regional_2024.png"), "\n")
-  /home/vilhuber/Workspace/Github/economics-open-science/outputs/r_downloads_regional_2024.png 
> cat("- ", file.path(outputs, "r_downloads_by_country_2024.csv"), "\n")
-  /home/vilhuber/Workspace/Github/economics-open-science/outputs/r_downloads_by_country_2024.csv 
> cat("- ", file.path(outputs, "r_downloads_by_region_2024.csv"), "\n")
-  /home/vilhuber/Workspace/Github/economics-open-science/outputs/r_downloads_by_region_2024.csv 
> cat("- ", file.path(interwrk, "r_downloads_2024_combined.csv"), "\n")
-  /home/vilhuber/Workspace/Github/economics-open-science/data/interwrk/r_downloads_2024_combined.csv 
> 
> 
> proc.time()
   user  system elapsed 
  5.186   0.279   5.974 
